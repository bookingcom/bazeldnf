"example MODULE.bazel to test bzlmod integration for bazeldnf with a prebuilt toolchain"

module(name = "example-bazeldnf-bzlmod-toolchain-from-source")

bazel_dep(name = "bazeldnf", dev_dependency = True)
local_path_override(
    module_name = "bazeldnf",
    path = "../..",
)

bazel_dep(name = "rules_pkg", version = "1.0.1")
bazel_dep(name = "rules_go", version = "0.49.0", repo_name = "rules_go")
bazel_dep(name = "gazelle", version = "0.37.0")
bazel_dep(name = "toolchains_protoc", version = "0.3.2")

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "@bazeldnf//:go.mod")
use_repo(
    go_deps,
    "com_github_adrg_xdg",
    "com_github_bazelbuild_buildtools",
    "com_github_crillab_gophersat",
    "com_github_mholt_archives",
    "com_github_onsi_gomega",
    "com_github_sassoftware_go_rpmutils",
    "com_github_sirupsen_logrus",
    "com_github_spf13_cobra",
    "io_k8s_sigs_yaml",
    "org_golang_x_crypto",
    "org_golang_x_exp",
    "org_golang_x_net",
)

bazeldnf_toolchain = use_extension("@bazeldnf//bazeldnf:extensions.bzl", "bazeldnf_toolchain")
bazeldnf_toolchain.register(disable = True)

bazeldnf = use_extension("@bazeldnf//bazeldnf:extensions.bzl", "bazeldnf")
bazeldnf.config(
    name = "bazeldnf_rpms",
    lock_file = "//:bazeldnf-lock.json",
)
use_repo(
    bazeldnf,
    "bazeldnf_rpms",
)
